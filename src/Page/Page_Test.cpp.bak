// Rocky 2010-05-04 13:46:14
#include "Page_Test.h"
#include "User.h"
#include "ThreadPool.h"
#include "Session.h"
namespace PAGE_TEST_SPACE
{







// ±êÃ÷Ä£¿é
static const string THIS_MODULE = "test";




Page_Test::Page_Test()
{
    FUNCTION_TRACK(); // º¯Êý¹ì¼£¸ú×Û
}

Page_Test::~Page_Test()
{
    FUNCTION_TRACK(); // º¯Êý¹ì¼£¸ú×Û
}


int Page_Test::DoInit()
{
    FUNCTION_TRACK(); // º¯Êý¹ì¼£¸ú×Û
    m_html = GlobalConfig::instance()->TemplateDir() + "Test.html";
    return Page::DoInit();
}

// ×ÓÀà¶ÔÏó´´½¨Æ÷
Page *Page_Test::DoNew()
{
    FUNCTION_TRACK(); // º¯Êý¹ì¼£¸ú×Û
    return new Page_Test;
}








/******************************** ÒµÎñ´úÂë ********************************/




int Page_Test::OutBody()
{
    FUNCTION_TRACK(); // º¯Êý¹ì¼£¸ú×Û

    assert(NULL != m_request);

    string html;


    /*
     * ²âÊÔ NowTime
     */
    {
    #if 1

        html = "<fieldset><legend>NowTime</legend>\n"
               "<pre>";

        html += NowTime();
        html += "\n";

        html += "</pre></fieldset>\n";

        m_request->GetConnect()->Send(html.c_str(), html.length());

    #endif
    }

    /*
     * ²âÊÔ GlobalConfig
     */
    {
    #if 1
        html = "<fieldset><legend>²âÊÔ</legend>\n"
               "<pre>";

        html += GlobalConfig::instance()->UserRootDir();
        html += "\n";

        html += GlobalConfig::instance()->CgiDir();
        html += "\n";

        html += GlobalConfig::instance()->HtmlDir();
        html += "\n";

        html += GlobalConfig::instance()->TemplateDir();
        html += "\n";

        html += GlobalConfig::instance()->TemplateDir();
        html += "\n";

        html += GlobalConfig::instance()->SystemLogDir();
        html += "\n";

        html += GlobalConfig::instance()->SystemDataDir();
        html += "\n";

        html += "</pre></fieldset>\n";

        m_request->GetConnect()->Send(html.c_str(), html.length());
    #endif
    }

    /*
     * ²âÊÔ User
     */
    {
    #if 1
        User *user = User::Get("rocky");

        html = "<fieldset><legend>²âÊÔ</legend>\n"
               "<pre>";

        html += user->DataDir();
        html += "\n";

        html += user->AttachDir();
        html += "\n";

        html += user->CacheDir();
        html += "\n";

        html += user->TmpDir();
        html += "\n";

        html += "</pre></fieldset>\n";

        m_request->GetConnect()->Send(html.c_str(), html.length());
    #endif
    }

    /*
     * ²âÊÔ XXX
     */
    {
    #if 0
        struct BackCall
        {
            static void *exe(void *)
            {
                LOG_INFO("BackCall::exe()........");
                return NULL;
            }
        };

        ThreadPool pool( BackCall::exe );

    #endif
    }

    /*
     * ²âÊÔ GetCookie
     */
    {
    #if 1

        const string cookie = m_request->GetHead("Cookie");
        const string id = m_request->GetCookie("id");


        html = "<fieldset><legend>GetCookie</legend>\n"
               "<pre>";

        html += cookie;
        html += "\n";

        html += id;
        html += "\n";

        html += "</pre></fieldset>\n";

        m_request->GetConnect()->Send(html.c_str(), html.length());

    #endif
    }

    /*
     * ²âÊÔ Session
     */
    {
    #if 1

        Session *session = Session::Get( m_request );
        string html;


        html = "<fieldset><legend>Session</legend>\n"
               "<pre>";

        html += session->GetUser();
        html += "\n";


        html += "</pre></fieldset>\n";

        m_request->GetConnect()->Send(html.c_str(), html.length());


    #endif
    }

    /*
     * ²âÊÔ Page::GetCurrentPack()
     */
    {
    #if 0

        const Conf *pack = Page::GetCurrentPack();

        LOG_DEBUG("-----------------[%s]------------", pack->Get("text").c_str());


    #endif
    }

    /*
     * ²âÊÔ XXX
     */
    {
    #if 0


        User *user = User::Get("rocky");

        LOG_ERROR("[%d]", user->isValid());
        LOG_ERROR("[%s]", user->GetInfo("password").c_str());


    #endif
    }

    /*
     * ²âÊÔ XXX
     */
    {
    #if 0


    #endif
    }

    return Page::OutBody();
}











// ¶¨Òå¶¯Ì¬¿âÈë¿Ú
DefinitinoDllEnter(Page_Test, THIS_MODULE)

}// end of PAGE_TEST_SPACE
